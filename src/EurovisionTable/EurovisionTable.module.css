.wrapper {
  width: 100%;
  height: 100%;
}

.grid {
  width: 100%;
  height: 100%;
  white-space: nowrap;
  overflow: auto;
  position: relative;
}

.rowWrapper {
  width: calc(var(--columnsCount) * var(--cellWidthHeight))
}

.firstRowWrapper {
  position: sticky;
  top: 0;
  z-index: 2;
}

.lastRowWrapper {
  position: sticky;
  bottom: 0;
}

.baseCell {
  display: inline-flex;
  width: 100px;
  height: 100px;
  border: 1px solid #000;
  align-items: center;
  justify-content: center;
  vertical-align: middle;
  white-space: normal;
  text-shadow: #FC0 1px 0 10px;
}

.baseHeaderFooterStarterEnder {
  composes: baseCell;
  background-repeat: no-repeat;
  background-position: center center;
  background-size: contain;
  font-size: 16px;
  background-color: #FFF;
}

.baseCornerCell {
  composes: baseCell;
  position: sticky;
  background-color: rgba(255, 255, 255, 1);
  z-index: 3;
}

.baseCornerCell::before {
  display: block;
  content: "Score To:";
  left: 10px;
  top: 0;
  position: absolute;
  transform: rotate(90deg);
  transform-origin: bottom left;

}

.baseCornerCell::after {
  display: block;
  content: "Score By:";
  top: 20px;
  right: 2px;
  position: absolute;
}

.cellInLeftTopCorner {
  composes: baseCornerCell;
  top: 0;
  left: 0;
}

.cellInRightTopCorner {
  top: 0;
  right: 0;
  composes: baseCornerCell;
}

.cellInLeftBottomCorner {
  left: 0;
  bottom: 0;
  composes: baseCornerCell;
}

.cellInRightBottomCorner {
  right: 0;
  bottom: 0;
  composes: baseCornerCell;
}

.cellInRightBottomCorner::before, .cellInLeftBottomCorner::before {
  transform-origin: top left;
  transform: rotate(-90deg);
  top: auto;
  bottom: 0;
}

.cellInFirstRow {
  composes: baseHeaderFooterStarterEnder;
}

.cellInLastRow {
  composes: baseHeaderFooterStarterEnder;
}

.cellInFirstColumn {
  composes: baseHeaderFooterStarterEnder;
  position: sticky;
  left: 0;
}

.cellInLastColumn {
  composes: baseHeaderFooterStarterEnder;
  position: sticky;
  right: 0;
}

.regularCell {
  composes: baseCell;
  font-size: 25px;
}

.oddRow {

}

.evenRow {

}

.oddColumn {

}

.evenColumn {

}

.regularCell.oddRow.oddColumn {
  background-color: blue;
}

.regularCell.evenRow.evenColumn {
  background-color: blueviolet;
}
